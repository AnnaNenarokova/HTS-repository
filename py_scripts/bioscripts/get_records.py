#!/usr/bin/python
from Bio import SeqIO

l = [
"GBHO01034182",
"GBHO01023573",
"GBHO01045303",
"GBHO01006052",
"GBHO01031989",
"GBHO01021784",
"GBHO01018338",
"GBHO01041700",
"GBHO01010674",
"GBHO01022436",
"GBHO01020405",
"GBHO01009387",
"GBHO01019247",
"GBHO01031068",
"GBHO01035587",
"GBHO01019953",
"GBHO01034180",
"GBHO01034181",
"GBHO01045304",
"GBHO01031990",
"GBHO01021785",
"GBHO01021786",
"GBHO01021788",
"GBHO01009389",
"GBHO01019246",
"GBHO01019952",
"GBHO01019955",
"GBHO01019956",
"GBHO01014799",
"GBHO01029919",
"GBHO01039146",
"GBHO01019403",
"GBHO01032435",
"GBHO01028019",
"GBHO01017335",
"GBHO01012543",
"GBHO01021619",
"GBHO01014433",
"GBHO01017590",
"GBHO01039393",
"GBHO01034404",
"GBHO01015913",
"GBHO01013306",
"GBHO01018910",
"GBHO01021559",
"GBHO01003530",
"GBHO01009905",
"GBHO01035913",
"GBHO01031857",
"GBHO01013647",
"GBHO01006795",
"GBHO01030881",
"GBHO01002032",
"GBHO01020673",
"GBHO01027780",
"GBHO01009551",
"GBHO01025618",
"GBHO01018911",
"GBHO01024226",
"GBHO01031771",
"GBHO01037907",
"GBHO01009322",
"GBHO01014377",
"GBHO01009982",
"GBHO01026715",
"GBHO01036143",
"GBHO01028410",
"GBHO01030114",
"GBHO01010873",
"GBHO01025732",
"GBHO01002552",
"GBHO01029299",
"GBHO01016344",
"GBHO01000863",
"GBHO01033426",
"GBHO01017234",
"GBHO01024596",
"GBHO01012272",
"GBHO01017741",
"GBHO01017723",
"GBHO01030379",
"GBHO01018348",
"GBHO01025420",
"GBHO01004851",
"GBHO01000503",
"GBHO01016349",
"GBHO01004852",
"GBHO01024596",
"GBHO01012272",
"GBHO01012272",
"GBHO01017741",
"GBHO01017741",
"GBHO01017741",
"GBHO01017741",
"GBHO01017741",
"GBHO01017741",
"GBHO01017723",
"GBHO01018348",
"GBHO01018348",
"GBHO01004851",
"GBHO01004851",
"GBHO01004851",
"GBHO01024226",
"GBHO01024226",
"GBHO01009322",
"GBHO01014377",
"GBHO01014377",
"GBHO01014377",
"GBHO01014377",
"GBHO01009982",
"GBHO01009982",
"GBHO01009982",
"GBHO01026715",
"GBHO01034182",
"GBHO01031068",
"GBHO01031068",
"GBHO01031068",
"GBHO01009387",
"GBHO01009387",
"GBHO01009387",
"GBHO01009387",
"GBHO01009387",
"GBHO01019247",
"GBHO01019247",
"GBHO01019247",
"GBHO01019247",
"GBHO01019247",
"GBHO01035587",
"GBHO01035587",
"GBHO01035587",
"GBHO01035587",
"GBHO01010674",
"GBHO01010674",
"GBHO01036143",
"GBHO01032435",
"GBHO01014433",
"GBHO01030114",
"GBHO01030114",
"GBHO01030114",
"GBHO01010873",
"GBHO01010873",
"GBHO01025732",
"GBHO01025732",
"GBHO01025732",
"GBHO01025732",
"GBHO01002552",
"GBHO01002552",
"GBHO01002552",
"GBHO01016344A",
"GBHO01016344A",
"GBHO01000503",
"GBHO01000503",
"GBHO01000863",
"GBHO01000863",
"GBHO01000863",
"GBHO01000863",
"GBHO01000863",
"GBHO01000863",
"GBHO01000863",
"GBHO01033426"

]

fasta = '/home/anna/bioinformatics/blasto/ligus_hesperus/ligus_hesperus_all_transcripts_changed_ids.fasta'
results = []

for record in SeqIO.parse(fasta, "fasta"):
    if record.id in l:
        results.append(record)

outpath = '/home/anna/bioinformatics/blasto/ligus_hesperus/rhizarian_ex_ligus_contigs.fasta'

SeqIO.write(results, outpath, "fasta")

# n = 3000
# fasta = '/home/anna/bioinformatics/blasto/jaculum/jaculum_scaffolds.fasta'
# results = []
# i = 0
# for record in SeqIO.parse(fasta, "fasta"):
#     if i < n:
#         results.append(record)
#     i+=1

# outpath = '/home/anna/bioinformatics/blasto/jaculum/jaculum_first3000.fasta'

# SeqIO.write(results, outpath, "fasta")
